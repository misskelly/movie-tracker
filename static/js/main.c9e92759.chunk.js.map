{"version":3,"sources":["images/film.png","images/hamburger.svg","images/active.svg","images/inactive.svg","apiKey.js","actions/index.js","containers/Header/index.js","utils/apiFetches/fetchAnything.js","components/MovieCard/index.js","thunks/fetchMovieInfo.js","containers/Movies/index.js","components/Banner/index.js","components/Home/index.js","utils/apiFetches/postUser.js","components/LoginPage/index.js","utils/cleaners/cleanMovies.js","containers/MoviePage/index.js","containers/App/index.js","utils/apiFetches/deleteFavorite.js","reducers/currentUserReducer.js","reducers/index.js","reducers/moviesReducer.js","reducers/formTypeReducer.js","reducers/selectedMovieReducer.js","reducers/showFavoritesReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","key","formType","type","form","currentUser","id","name","email","favorites","userInfo","Header","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleClick","_ref","target","textContent","props","logOutUser","showFavorites","inherits","createClass","value","react_default","a","createElement","className","onClick","react_router_dom","to","src","film","alt","hamburger","Component","connect","state","dispatch","text","bool","isShown","fetchAnything","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","ok","Error","json","abrupt","stop","_x","MovieCard","showMoreInfo","card","movie_id","fetchInfo","toggleFavorite","_this$props$card","title","poster_path","release_date","vote_average","overview","body","user_id","userId","updateFavorites","setState","loginPrompt","cardHover","favorite","active","inactive","userFavorites","movieInfo","movie","t0","fetchMovieInfo","movies","favoriteMovieIds","map","objectSpread","includes","movieCards","filter","components_MovieCard","uuidv4","require","posters","showFavs","all","fill","counter","movieTiles","space","Home","components_Banner","Movies","postUser","method","JSON","stringify","headers","Content-Type","_x2","LoginPage","formTypeHandler","_this$state","password","userName","fetchUserFavorites","favoritesUrl","data","submitUserData","_callee2","_this$formTypeHandler","_context2","t1","t2","t3","t4","t5","t6","signInUser","error","t7","handleChange","_ref3","_this$setState","defineProperty","handleSubmit","e","preventDefault","_this$state2","confirmPassword","passwordMismatch","_this$props","changeForm","react_router","signUpInputs","htmlFor","onChange","autoComplete","signInInputs","createActLink","errorText","onSubmit","_ref4","cleanMovies","selectedMovie","_props$movie","backdrop_path","App","_componentDidMount","nowShowingUrl","result","results","addMovies","console","log","containers_Header","exact","path","component","MoviePage","deleteFavorite","movieId","initialState","rootReducer","combineReducers","undefined","action","toConsumableArray","favId","some","fav","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.c9e92759.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/film.a8ba11ab.png\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.9e0d17aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/active.4bc306eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/inactive.5cff0a49.svg\";","export const key = \"5310aa6f4d14e299fb8cb311d11b5c79\"","export const addMovies = (movies) => ({\n  type: 'ADD_MOVIES',\n  movies\n})\n\nexport const formType = (type) => ({\n  type: 'FORM_TYPE',\n  form: type\n})\n\nexport const currentUser = (id, name, email, favorites) => ({\n  type: 'CURRENT_USER',\n  userInfo: { id, name, email, favorites }\n})\n\nexport const selectedMovie = (movie) => ({\n  type: 'SELECTED_MOVIE',\n  movie\n})\n\nexport const updateFavorites = (favorite) => ({\n  type: 'UPDATE_FAVORITES',\n  favorite\n})\n\nexport const showFavorites = (bool) => ({\n  type: 'SHOW_FAVORITES',\n  isShown: bool\n})","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'; \nimport { formType, currentUser, showFavorites }  from '../../actions/index';\nimport film from '../../images/film.png';\nimport hamburger from '../../images/hamburger.svg'\n\n\nexport class Header extends Component {\n  handleClick = ({target}) => {\n    target.textContent === 'Log-in' \n      ? this.props.formType('login')\n      : this.props.formType('signup')\n    switch(target.textContent) {\n      case 'Log-out':\n        this.props.logOutUser();\n        this.props.showFavorites(false);\n        break;\n      case 'Favorites':\n        this.props.showFavorites(true)\n        break;\n      default:\n      this.props.showFavorites(false)\n    }\n  }\n\n  render() {\n    const { name } = this.props.currentUser;\n    const userInfo = (<h3 className='user-greeting'>{`Hello ${name}!`}</h3>)\n    \n    return(\n      <header className='header' onClick={ this.handleClick }>\n        <article className='logo-wrapper'>\n          <h2 className='icon-text'>MT</h2>\n          <NavLink \n            to='/' \n            className='home-logo'>\n          <img \n            src={film} \n            alt='film with star icon' className='film-icon'/>\n          </NavLink>\n        </article>\n        <nav className='desktop-nav'>\n            { name && userInfo }\n          <NavLink \n            to='/' \n            className='nav'>\n            Home \n          </NavLink>\n          <NavLink \n            to={`${name ? '/' : '/login'}`}\n            className='nav'>\n            {`${ name ? 'Favorites' : 'Create Account'}`}\n          </NavLink>\n          <NavLink \n            to={`${name ? '/' : '/login'}`} className='nav' >\n            {`${ name ? 'Log-out' : 'Log-in'}`}\n          </NavLink>\n        </nav>\n        <nav className='mobile-nav hidden'>\n          <img className='menu-icon' alt='hamburger icon' src={hamburger}/>\n        </nav>\n      </header>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  formType: (text) => dispatch(formType(text)),\n  logOutUser: () => dispatch(currentUser()),\n  showFavorites: (bool) => dispatch(showFavorites(bool))\n})\n\nHeader.propTypes = {\n  currentUser: PropTypes.object,\n  formType: PropTypes.func,\n  logOutUser: PropTypes.func,\n  showFavorites: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export const fetchAnything = async (url) => {\n  const response = await fetch(url);\n  if(!response.ok) {\n    throw Error(\"Failed to fetch movies\")\n  }\n  return await response.json();\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { fetchMovieInfo } from '../../thunks/fetchMovieInfo';\nimport { updateFavorites } from '../../actions/index.js';\nimport { key } from '../../apiKey';\nimport { connect } from 'react-redux';\nimport active from '../../images/active.svg';\nimport inactive from '../../images/inactive.svg';\n\nexport class MovieCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cardHover: false,\n      loginPrompt: false\n    }\n  }\n  \n  showMoreInfo = () => {\n    const { card } = this.props;\n    const url = `https://api.themoviedb.org/3/movie/${card.movie_id}?api_key=${key}&language=en-US`;\n    this.props.fetchInfo(url);\n  }\n\n  toggleFavorite = () => {\n    const { movie_id, title, poster_path, release_date, vote_average, overview } = this.props.card\n    const body = {\n      movie_id,\n      user_id: this.props.userId,\n      title,\n      poster_path,\n      release_date,\n      vote_average,\n      overview\n    }\n    \n    if (this.props.userId) {\n      this.props.updateFavorites(body)\n      this.setState({ loginPrompt: false })\n    } else {\n      this.setState({ loginPrompt: !this.state.loginPrompt })\n    }\n  }\n\n  render() {\n    const { card } = this.props;\n    return (\n      <article \n        key={card.movie_id} \n        className='movie-card'>\n      <img \n        src={`https://image.tmdb.org/t/p/w500/${card.poster_path}`} \n        alt={`Promotional movie poster for ${card.title}`} \n        className='poster-img'/>\n       <div className='card-hover'>\n        <h4 className='card-hover-heading'>{card.title}</h4>\n        <Link to={`/movies/${card.movie_id}`}>\n          <button \n            onClick={this.showMoreInfo} \n            className='more-info-btn btn'>\n            More <br/> Info\n          </button>\n        </Link>\n        <button \n          className='favorite-btn btn'\n          onClick={this.toggleFavorite}>\n          { card.favorite \n            ? <img src={active} alt='Star icon for favorited movie' className='active-star star'/> \n            : <img src={inactive} alt='Star icon' className='inactive-star star'/>}\n        </button>\n          { this.state.loginPrompt \n          ? (<p className='login-prompt prompt'>Please login to Favorite this card</p>)\n          : (<p className='prompt-placeholder prompt'>X</p>)\n          }\n      </div>\n    </article>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  userId: state.currentUser.id,\n  userFavorites: state.currentUser.favorites || []\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  fetchInfo: (url) => dispatch(fetchMovieInfo(url)),\n  updateFavorites: (movie) => dispatch(updateFavorites(movie))\n})\n\nMovieCard.propTypes = {\n  userId: PropTypes.number,\n  userFavorites: PropTypes.array,\n  fetchInfo: PropTypes.func,\n  updateFavorites: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieCard);","import { fetchAnything } from '../utils/apiFetches/fetchAnything.js'\nimport{ selectedMovie } from '../actions/index'\n\nexport const fetchMovieInfo = (url) => {\n  return async (dispatch) => {\n    try {\n      const movieInfo = await fetchAnything(url)\n      dispatch(selectedMovie(movieInfo))\n    } catch(error) {\n      throw new Error('Problem getting movie info :(')\n    }\n  }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport MovieCard from '../../components/MovieCard'\nimport { connect } from 'react-redux'\n\n\n\n\nexport const MoviesGallery = (props) => {\n  const favoriteMovieIds = props.favorites.map(movie => movie.movie_id)\n  const movies = props.movies.map( movie => {\n    return {...movie, favorite: favoriteMovieIds.includes(movie.movie_id) ? true : false}\n  })\n  const showMovies = props.showFavorites \n    ? movies.filter(movie => movie.favorite)\n    : movies\n  const movieCards = showMovies.map(movie => \n    <MovieCard \n      key={ movie.movie_id }\n      card={movie}\n    />)\n  \n  return (\n    <section className='movies-section'>\n      {movieCards}\n      { (props.favorites.length === 0 && props.showFavorites) && <h2>No Favorites Yet</h2> }\n    </section>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n  favorites: state.currentUser.favorites || [],\n  showFavorites: state.showFavorites\n})\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array,\n  favorites: PropTypes.array,\n  showFavorites: PropTypes.bool\n}\n\nexport default connect(mapStateToProps)(MoviesGallery)","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst uuidv4 = require('uuid/v4');\n\nexport const Banner = (props) => {\n    let all = Array(256).fill('');\n    let counter = 0;\n    const movieTiles = all.map(space => {\n      counter === 19 ? counter = 0 : counter++;\n      return (\n        <div key={uuidv4()} className='tile'>\n          <img src={props.posters[counter]} className='tile' alt=''/>\n        </div>)\n    })\n\n  return (\n    <section className='banner-section'>\n      <h1 className='banner-heading'>{props.showFavs ? 'Favorites' : 'MovieTracker'}</h1>\n      <div className='movie-tiles'>\n        {movieTiles}\n      </div>\n    </section>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  posters: state.movies.map(movie => `https://image.tmdb.org/t/p/w500/${movie.poster_path}`),\n  showFavs: state.showFavorites\n})\n\nBanner.propTypes = {\n  posters: PropTypes.array,\n  showFavs: PropTypes.bool\n}\n\nexport default connect(mapStateToProps)(Banner);\n\n","import React from 'react';\nimport Movies from '../../containers/Movies';\nimport Banner from '../Banner';\n\nconst Home = () => (\n  <section className=\"home-section\">\n    < Banner />\n    < Movies />\n  </section>\n)\n\nexport default Home;","export const postUser = async (url, body) => {\n  const response = await fetch( url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  })\n  if (!response.ok) {\n    throw new Error('Failed to post user data')\n  }\n  return response.json();\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { postUser } from '../../utils/apiFetches/postUser';\nimport { fetchAnything } from '../../utils/apiFetches/fetchAnything';\nimport { currentUser, formType } from '../../actions';\nimport { Redirect } from 'react-router-dom';\n\nexport class LoginPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      password: '',\n      email: '',\n      confirmPassword: '',\n      userName: '',\n      error: false,\n      passwordMismatch: false\n    }\n  }\n\n  formTypeHandler = () => {\n    const { email, password, userName } = this.state;\n    const userInfo = this.props.formType === 'login'\n    ? ({ email, password })\n    : ({ email, password, name: userName });\n    const url = this.props.formType === 'login'\n      ? 'http://localhost:3000/api/users'\n      : 'http://localhost:3000/api/users/new'\n    return ({ url, userInfo, email, userName})\n  }\n\n  fetchUserFavorites = async (userId) => {\n    const favoritesUrl = `http://localhost:3000/api/users/${userId}/favorites`\n    const favorites = await fetchAnything(favoritesUrl)\n    return favorites.data;\n  }\n\n  submitUserData = async () => {\n    const {url, userInfo, email, userName} = this.formTypeHandler();\n    try {\n      const response = await postUser(url, userInfo);\n      this.props.formType === 'login' \n      ? this.props.signInUser({...response.data, favorites: await this.fetchUserFavorites(response.data.id)})\n      : this.props.signInUser({ id:response.id, email, name: userName, favorites: []});\n      await this.setState({ error: false});\n    } catch(error) {\n      this.setState({ error: true })\n    }\n  }\n\n  handleChange = ({target}) => {\n    this.setState({ [target.name]: target.value, passwordMismatch: false })\n  } \n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { email, confirmPassword, password, userName } = this.state;\n    if (this.props.formType === 'login') {\n      (email.length && password.length) && this.submitUserData();\n    } else {\n      (email.length && password.length && confirmPassword === password && userName.length) && this.submitUserData();\n    }\n    const passwordMismatch = this.props.formType === 'signup' && password !== confirmPassword;\n    this.setState({ passwordMismatch })\n  }\n  \n  render() {\n    const { formType, currentUser, changeForm } = this.props\n    if (currentUser.name) return (<Redirect to='/'/>);\n    const signUpInputs = (\n      <div className=\"signup-form-inputs\">\n        <label \n          htmlFor='userName' \n          className='sign-up input-label'>\n          Username\n        </label>\n        <input \n          onChange={this.handleChange} \n          name=\"userName\" \n          type='text' \n          id='userName' \n          className='sign-up form-input'\n          autoComplete='name'>\n        </input>\n        <label \n          htmlFor='email-input' \n          className='sign-up input-label'>\n          E-mail\n        </label>\n        <input \n          type='email' \n          id='email-input' \n          className='sign-up form-input' \n          onChange={this.handleChange} \n          name='email'\n          autoComplete=\"email\">\n          </input>\n        <label \n          htmlFor='password-input' \n          className='sign-up input-label'>\n          Password\n        </label>\n        <input \n          type='password' \n          id='password-input' \n          className='sign-up form-input' \n          onChange={this.handleChange} \n          name='password'\n          autoComplete='new-password'>\n        </input>\n        <label \n          htmlFor='confirm-password-input' \n          className='sign-up input-label'>\n          Confirm Password\n        </label>\n        <input \n          onChange={this.handleChange} \n          name=\"confirmPassword\" \n          type='password' \n          id='confirm-password-input' \n          className='sign-up form-input'\n          autoComplete='new-password'>\n        </input>\n      </div>)\n    const signInInputs = (\n      <div className=\"sign-in-inputs\">\n        <label \n        htmlFor='email-input' \n        className='email-input-label input-label'>\n        E-mail\n        </label>\n          <input \n          type='email' \n          id='email-input' \n          className='form-input' \n          onChange={this.handleChange} \n          name='email' \n          autoComplete='username'>\n        </input>\n        <label \n          htmlFor='password-input' \n          className='password-input-label \n          input-label'>\n          Password\n        </label>\n        <input \n          type='password' \n          id='password-input' \n          className='form-input' \n          onChange={this.handleChange} \n          name='password' \n          autoComplete='current-password'>\n        </input>\n      </div>)\n    const createActLink = (\n      <span \n        className='signup-link' \n        onClick={() => changeForm('signup')}>\n        Create Account\n      </span>)\n    const errorText = formType === 'login'\n      ? <p>Email and password do not match an account, check login info or {createActLink}</p>\n      : 'Email has already been used.'\n    return (\n      <main className='login-page'>\n        <h2 className='form-heading'>{ formType === 'login' ? 'LOGIN' : 'SIGN-UP' }</h2> \n        <form className='login-form' onSubmit={this.handleSubmit}>\n          <fieldset className='login-fieldset'>\n            { formType === 'login' ? signInInputs : signUpInputs }\n            { this.state.passwordMismatch &&  <p>Passwords do not match</p>}\n            { this.state.error && <p className='login-error'>{errorText}</p>}\n            <input id='form-submit-btn' type=\"submit\" value=\"Submit\" />\n          </fieldset>\n        </form>\n      </main>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  formType: state.formType,\n  currentUser: state.currentUser\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  signInUser: ({id, name, email, favorites}) => \n    dispatch(currentUser(id, name, email, favorites)), \n  changeForm: (text) => dispatch(formType(text))\n})\n\nLoginPage.propTypes = {\n  formType: PropTypes.string,\n  currentUser: PropTypes.object,\n  signInUser: PropTypes.func,\n  changeForm: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","export const cleanMovies = (movies) => movies.map(movie => {\n  const { id, title, poster_path, release_date, vote_average, overview } = movie\n  return {\n    movie_id: id,\n    title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview\n  }\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport const MoviePage = (props) =>  {\n  const { title, backdrop_path, overview, poster_path, release_date, vote_average } = props.movie;\n  \n  return(\n    <section className='movie-page-container'>\n      <article className='movie-banner-wrapper'>\n        <img \n          src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}  \n          alt={`Promotional poster from ${title}`} \n          className='movie-banner-img'\n          />\n      </article>\n      <article className='poster-container'>\n          <img \n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}  \n            alt={`Promotional poster from ${title}`} \n            className='movie-poster-img'/>\n      </article>\n      <article className='movie-text-container'>\n        <h2 className='title-heading'>{ title }</h2>\n        <h3 className='date-heading'>{ release_date }</h3>\n        <h4 className='rating-heading'>Rating: { vote_average }</h4>\n        <p className='overview-text'>{ overview }</p>\n      </article>\n    </section>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  movie: state.selectedMovie\n})\n\nMoviePage.propTypes = {\n  movie: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(MoviePage)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom';\nimport { key } from '../../apiKey';\nimport Header from '../Header'\nimport Home from '../../components/Home';\nimport LoginPage from '../../components/LoginPage'\nimport { fetchAnything } from '../../utils/apiFetches/fetchAnything';\nimport { cleanMovies } from '../../utils/cleaners/cleanMovies'\nimport { addMovies } from '../../actions/index'\nimport MoviePage from '../../containers/MoviePage'\n\nexport class App extends Component {\n  async componentDidMount() {\n    const nowShowingUrl = `https://api.themoviedb.org/3/movie/now_playing?api_key=${key}&language=en-US&page=1`;\n    try {\n      const movies = await fetchAnything(nowShowingUrl);\n      const result = await cleanMovies(movies.results)\n      await this.props.addMovies(result)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Route exact path='/' component={ Home } />\n        <Route exact path='/favorites' component={ Home } />\n        <Route exact path='/login' component={ LoginPage } />\n        <Route exact path='/movies/:id' component={ MoviePage } />\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  addMovies: (movies) => dispatch(addMovies(movies))\n})\n\nApp.propTypes = {\n  movies: PropTypes.array,\n  addMovies: PropTypes.func\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const deleteFavorite = async (userId, movieId) => {\n  const url = `http://localhost:3000/api/users/${userId}/favorites/${movieId}`\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {'Content-Type': 'application/json'}\n  })\n    if (!response.ok) {\n      throw new Error('Something went wrong')\n    }\n  return response.json()\n}","import { deleteFavorite } from '../utils/apiFetches/deleteFavorite';\nimport { postUser } from '../utils/apiFetches/postUser';\nconst initialState = {}\n\nexport const currentUserReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case 'CURRENT_USER':\n      return {...state, ...action.userInfo};\n    case 'UPDATE_FAVORITES':\n      const favId = action.favorite.movie_id\n      const existingFav =  state.favorites.some(fav => fav.movie_id === favId);\n      if(existingFav) {\n        deleteFavorite(state.id, favId)\n        return {...state, favorites: state.favorites.filter(movie => movie.movie_id !== favId) }\n      } else {\n        postUser('http://localhost:3000/api/users/favorites/new', action.favorite)\n        return {...state, favorites: state.favorites.concat(action.favorite) }\n      }\n    default: \n      return state;\n  }\n}","import { moviesReducer } from './moviesReducer'\nimport { formTypeReducer } from './formTypeReducer'\nimport { combineReducers } from 'redux'\nimport { currentUserReducer } from './currentUserReducer'\nimport { selectedMovieReducer } from './selectedMovieReducer'\nimport { showFavoritesReducer } from './showFavoritesReducer'\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  formType: formTypeReducer,\n  currentUser: currentUserReducer,\n  selectedMovie: selectedMovieReducer,\n  showFavorites: showFavoritesReducer\n})\n\nexport default rootReducer;","export const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_MOVIES':\n      return [...state, ...action.movies]\n    default :\n      return state;\n  }\n}","export const formTypeReducer = (state = 'login', action) => {\n  switch (action.type) {\n    case 'FORM_TYPE':\n      return action.form\n    default: \n      return state;\n  }\n}","export const selectedMovieReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SELECTED_MOVIE' :\n      return {...state, ...action.movie}\n    default :\n      return state\n  }\n}","export const showFavoritesReducer = (state = false, action) => {\n  return action.type === 'SHOW_FAVORITES'\n    ? action.isShown\n    : state\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App /> \n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));"],"sourceRoot":""}